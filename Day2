\xA=\n
\xB=\r
\xC=
\xG="compilation error"
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
	int main() {
		char ch[20] = "abcdefghi";
		printf("\n%5.2s", ch);
		system("pause");
		return 0;
	}


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
	int main() {
		char *ptr ="india%s";
		printf(ptr);
		system("pause");
		return 0;
	}


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
	int main() {
		printf("%d", 5.25);
		system("pause");
		return 0;
	}
op:0

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
	int main() {
		printf("%d",(int)5.25);
		system("pause");
		return 0;
	}
  op:5
  
  
  
  #include<stdio.h>
#include<stdlib.h>
#include<string.h>
	int main() {
		int a, b;
		printf("%d", scanf_s("%d %d", &a, &b));
		system("pause");
		return 0;
	}


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
extern int num;
	int main() {
		printf("%d", num);
		system("pause");
		return 0;
	}
	int num = 20;
op:20


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
extern  num;
int main() {
	printf("%d", num);
	system("pause");
	return 0;
}
int num = 20;


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
	struct num {
		int num;
	};
	struct num key = { 25 };
	printf("%d", key.num);
	system("pause");
	return 0;
}
int num = 20;

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
	printf("%d", EOF);
	system("pause");
	return 0;
}


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
	int scanf = 13;
	printf("%d", scanf);
	system("pause");
	return 0;
}
op:13


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
	char printf[25] = "printf";
	puts(printf);
	system("pause");
	return 0;
}

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
	int main = 47;
	printf("%d", main);
	system("pause");
	return 0;
}op:47

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
	extern num;
	printf("%d", num);
	system("pause");
	return 0;
}
int num = 36;



#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
	int xyz = 20;
	{
		int xyz = 40;
	}
	printf("%d", xyz);
	system("pause");
	return 0;
}
int num = 36;

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
	char arr[] = "Cat";
	*arr = 'B';
	printf("%s", arr);
	system("pause");
	return 0;
}
op:Bat



#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
	char *ptr = "Cat";
	*ptr= 'B';
	printf("%s", ptr);
	system("pause");
	return 0;
}
op:Run time errror


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
	char arr1[50];
	char arr2[50] = "hello"
	arr1 = arr2;
	printf("%s", arr1);
	system("pause");
	return 0;
}
op:compilation error


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
	char arr1[50]="hello";
	char arr2[50] = "hello";
	if (arr1 = arr2)
	{
		
	}
	system("pause");
	return 0;
}


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
	char *ptr, **ptr1;
	printf("%u", sizeof(ptr));
	printf("%u", sizeof(ptr1));
	system("pause");
	return 0;
}




Diffrent Types of constant:
1.define constant
   #define x 10
   main()
   {
   
   printf("%d",x);
   #undef x //undefining x
   }
2.memory constant
3.literal constant


macro
inclusion
compiler contro directives



#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#define x 10;
int main() {
#define x 100;
	printf("%d", x);
	system("pause");
	return 0;
}


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
	char num = '\010';
	printf("%d", num);
	system("pause");
	return 0;
}

op:8

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
	void num = 10;
	printf("%v", num);
	system("pause");
	return 0;
}
op:compilation error bcz no void varibles and pointers


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
	void *ptr;
	int num = 10;
	ptr = &num;
	printf("%d", ptr);
	system("pause");
	return 0;
}
op:Adress
void have pointers


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
	printf("%d\t", sizeof(20.5));
	printf("%d\t", sizeof(4));
	system("pause");
	return 0;
}


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
	signed a;
	unsigned b;
	a = 6u + -16 + 16u + -6; //0
	b = a + 1;//1
	if (a == b)
		printf("%d %d", a, b);
	else
		printf("%d %d", a, b);
	
	return 0;
}


enum is applied only for integers
enum fruits{apple,bannana};


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
	extern int num;
	num=5;
	printf("%d",num);
	return 0;
}


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
char * ptr;
	printf("%d %d",sizeof(ptr),sizeof(*ptr));
	return 0;
}


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
int num=- -2;
printf("%d",num);
	return 0;
}


interrupt //odd
register
extern
huge //extend memmory

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
	10;
	printf("%d", 10);
	system("pause");
	return 0;
}


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
char num=127;
num=num+1;
printf("%d",num);
	return 0;
}


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
int size=sizeof(volatile)+sizeof(const);
printf("%d",++size);
	return 0;
}

op:output not predictable bcz volatile is noit predictable


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
static int num=6;
printf("%d",num--);
if(num)
main();
	return 0;
}


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
float x=3.14;
double y=3.14;
printf("%f %ff",x,y);
	return 0;
}


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
static int num=3;

if(--num)
main();
printf("%d",num);
	return 0;
}

//wait 
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
int i=5;
int a=++i + ++i + ++i + ++i;
printf("%d",a);
	return 0;
}
//wait
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
int i=5;
int a=--i + --i + --i ;
printf("%d",a);
	return 0;
}

//wait
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
int i=5;
int a=--i + --i + --i + --i;
printf("%d",a);
	return 0;
}


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
int a=2,b=2,c=0,d=2,m;
m=a++&&b++&&c++||d++;
printf("%d %d %d %d %d",a,b,c,d,m);
printf("%d",a);
	return 0;
}


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
int i=5;
int a=--i + ++i - i-- + --i;
printf("%d",a);
	return 0;
}
//own
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
int a=10U + 11;
printf("%d",a);
	return 0;
}
//own
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
int a=100U + 11 + 100L ;
printf("%d",a);
	return 0;
}

Control statements(conditional statements):-
repetition:
    Try to repeat multiple times use control loops
    1.for(intilization,condition,increment/decrement)
    2.while(condition)//one form of for loop
    3.dowhile (atleast one condition is check)
       do{
          }while(condition)
        
resuing:
    f()//example
    
 #include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
if(true)
{
    printf("hello");
}
else{
    printf("hellop");
}
	return 0;
}
op:hellop


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
char str[]="\0";
if(printf("%s",str))
printf("In");
else
printf("else");
	return 0;
}
op=else

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
if(printf("0"))
printf("In");
else
printf("else");
	return 0;
}


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
int i=5,j=5;
if(i==j);
printf("equal");
else
printf("notequal");
	return 0;
}
op:compilation error

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
int i=5,j=5;
if(i==j);
printf("equal");

	return 0;
}
op:equal //after the if block bcz equal printing


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
int i=25;
if(i==25);
i=50;
if(i==25)
i=i+1;
else
i=i+1;
printf("%d",i);

	return 0;
}


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
int i=2;
if(i==(1,2))
printf("hai");
else
printf("else");

	return 0;
}
op:hai

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
if(sizeof('\0'))
printf("yes");
else
printf("no");

	return 0;
}
op:yes


new question in techinal:
1
2 6
3 7 10
4 8 11 13
5 9 12 14 15
program://own
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
    int k=1,s=4,m;
for(int i=1;i<=5;i++)
{
    m=k;
    for(int j=1;j<=i;j++)
    {
        printf("%d ",k);
        k=k+s;
        s--;
    
    }
    k=m;
    s=4;
    k++;
    printf("\n");
}
	return 0;
}


int a[][3]={};
int (*ptr)[3]=a;
(*ptr)[0],(*ptr)[1]
++ptr;
(*ptr)[0],(*ptr)[1]



char arr[10]={}
temp=(arr+1)[2];



//print 5 contains in a[4][][]
int a[1][2][3]={0};
a[0][1][2]=5;
a[0][1][2]//*(*(*(a+0)+1)+2)



int far *ptr, far *ptr1//to extend the emmory size

int a[5][5] //25* 2=50 size //2bytes 

num=10
*p=10
**q=10
char str[3]='A','B','C','\0'; compilation error
char str[4]='A','B','C','\0';

for(i=0;str[i];i++)
putchar(str[i])

scanf("%s",str); //non- homogenous input function
gets(str)//homogenous input function
puts(str)//print string

char *str="cse"; ///how much memory what u want it allocates it
gets(str)                    ""



write a program to accept the string and display the word in a string in reverse order 
input:
The CSE students
output:
students CSE the



Write a logic to find binary substring in a given text of binary string
program://editing in progress
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
	char str[50];
	char s[50];
	int j, k, len;
	gets(str);
	gets(s);
	for (int i = 0; str[i]; i++)
	{
		j = i;
		len = strlen(s);
		 k = 0;
		while ( j > (i + len+1) && (k<len) && str[j] == s[k])
		{
			j++;
			k++;
		}
		if (k == len)
		{
			printf("yes");
		}
	}
	
	return 0;
}


arr={"bat","cat","gap","hat","rat"}
fun(arr)
void fun(char **p)
{
char *t;
t=(p+=sizeof(int))[-1];
printf("%s\n",t);
}




#include <stdio.h>
void fun(int b[][3])
{
++b;
b[1][1]=15;
}
int main(void)
{
int arr[3][3]={{1,2,3},{4,5,6},{7,8,9}};
fun(arr);
printf("%d",arr[2][1]);
}




int rows=3,columns=4,i,j,k;
int a[3][4]={1,2,3,5,7};
i=j=k=00;
for(i=0;i<rows;i++)
for(j=0;j<columns;j++)
if(a[k][j]<k)
k=a[i][j];
printf("%d",k);


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main() {
	int arr[]={1.2,2.3,3.4,4.5};
int j,*ptr=arr;
for(j=0;j<5;j++)
{
printf("%d",*arr);
++ptr;
}
	
	return 0;
}


int i=0;
printf("hello");
char s[4]={'\b','\t','\r','\n'};
for(int i=0;i<4;i++)
{
printf("%c",s[i]);
}

int i=0;
printf("hello");
char s[4]={'\b','\r','\t','\n'};
for(int i=0;i<4;i++)
{
printf("%c",s[i]);
}


static int a[]={0,1,2,3,4};
int *p[]={a,a+1,a+2,a+3,a+4};
int **ptr=p;
++*ptr;
printf("%d %d %d",ptr-p,*ptr-a,ptr);


char s[]={'a','b','c','\n','\0'}
char *p,*str,*str1;
p=&s[3];
str=p;
str1=s;
printf("%d %dc %d",++*ptr,);


int arr[2]={1,2,3,4,5};
printf("%d",arr[3]);//compilation error


int arr[5]={1,2,3,25,7};
a=++arr[1];
b=arr[1]++;
c=arr[a++];
printf("%d %d %d",a,b,c);
op:4,3,25

int arr[5]={1,3,5,7,11};
int *ptr,*ptr1;
ptr=&arr;
ptr1=*ptr+3;
printf("%d %d",*ptr,ptr1);
op:1,4

int arr[5]={1,3,5,7,11};
int *ptr;
ptr=&arr;
printf("%d",*ptr);
op:2


static char *arr[]={"bike","bus","car","van"};
char **ptr[]={arr+3,arr+2,arr+1,arr};
char ***p;
p=ptr;
**++p;
printf("%s",**++p+2);


int arr[0][3]={{3,6,9},{12,15,18}};
int *ptr;
ptr=&arr;
arr(&ptr);
void arr(**ptr)
{
printf("%d",**ptr);
}
op:3



write a program to display frequency of each element of the array?
input: 1 2 3 4 2 4
output:1 2 2 1

write a logic two sorted arrays?
input:
3 3
2 4 6
3 5 7
output:2 3 4 5 6 7


write a program to rotate the array right side n positions? 
input=1,2,3,4,5
n=3
output=5 1 2 3 4 5

write a program to fin mind and max values in the array?
input=7 5 1 2 9
output=1 9

write a program to reverse the string witout using any string library functions?
input=hello
output=olloeh


Write a program to determine the ength of the longest pattern with consecutive incresing numbers in the array,when two such patterns of same 
max size are found ,return sum numbers of the pattern whose sum is greater

explanation:
Given array[1,3,2,5,7,9,12,13,2,4,3,0],the length of such pattern is 6
i.e[2,5,7,9,12,13]


1
2 9
3 8 12
4 7 11 14
5 6 10 13 15

write a program to convert the digits of the given numbers into binary foramts
7 8 9 6
0111
1000
1001
0110


